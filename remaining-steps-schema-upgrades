Steps in the schema upgrade branch:

** Separate commits to new infrastructure (can be squashed) from existing files!
    (the latter can't be squashed, need to be descriptive commits to become part of project history)


- implement 'setup.pl' infrastructure:
  * HTML snippets for rendering
  * formatter API consumed to build HTML results
  * formatter API to consume posted/corrected data
  - 

- implement tests!
  - t/16-schema-upgrade-precheck.t -- non-database logic check
    * loading change files
      * bail if required arguments haven't been provided to 'check'
      * succeed with multiple checks defined in a single file
      * fail if multiple checks in a file share the same title
    * run checks (with no real $dbh; no formatters)
      * various combinations of succeeding and failing tests
    * use formatters to bind functions
  - xt/43-schema-upgrades.t -- actual database checks
    * run a succeeding check
    * run a failing check
    * run a check file with a failing check, submitting corrective action


- change-application needs a data-source
    (to return values from the input form to the change applicator)
- define all formatters
  - HTML
  - File (pre-defined inputs)
- change all callees to die on error (and return status on failure)
- 


Legenda:
 Starred items are done
 Dashed items are to be done or in progress