CREATE OR REPLACE FUNCTION lsmb_pgtap._table_public_asset_report()
RETURNS SETOF TEXT AS $$
BEGIN


RETURN NEXT has_table(
    'public', 'asset_report',
    'Should have table public.asset_report'
);

RETURN NEXT has_pk(
    'public', 'asset_report',
    'Table public.asset_report should have a primary key'
);

RETURN NEXT columns_are('public'::name, 'asset_report'::name, ARRAY[
    'id'::name,
    'report_date'::name,
    'gl_id'::name,
    'asset_class'::name,
    'report_class'::name,
    'entered_by'::name,
    'approved_by'::name,
    'entered_at'::name,
    'approved_at'::name,
    'depreciated_qty'::name,
    'dont_approve'::name,
    'submitted'::name
]);

RETURN NEXT has_column(       'public', 'asset_report', 'id', 'Column public.asset_report.id should exist');
RETURN NEXT col_type_is(      'public', 'asset_report', 'id', 'integer', 'Column public.asset_report.id should be type integer');
RETURN NEXT col_not_null(     'public', 'asset_report', 'id', 'Column public.asset_report.id should be NOT NULL');
RETURN NEXT col_has_default(  'public', 'asset_report', 'id', 'Column public.asset_report.id shouldhave a default');
--SELECT col_default_is(   'public', 'asset_report', 'id', 'nextval(''asset_report_id_seq''::regclass)', 'Column public.asset_report.id default is');RETURN NEXT col_default_is(   'public', 'asset_report', 'id', 'nextval(''asset_report_id_seq''::regclass)', 'Column public.asset_report.id default is');

RETURN NEXT has_column(       'public', 'asset_report', 'report_date', 'Column public.asset_report.report_date should exist');
RETURN NEXT col_type_is(      'public', 'asset_report', 'report_date', 'date', 'Column public.asset_report.report_date should be type date');
RETURN NEXT col_is_null(      'public', 'asset_report', 'report_date', 'Column public.asset_report.report_date should allow NULL');
RETURN NEXT col_hasnt_default('public', 'asset_report', 'report_date', 'Column public.asset_report.report_date should not have a default');

RETURN NEXT has_column(       'public', 'asset_report', 'gl_id', 'Column public.asset_report.gl_id should exist');
RETURN NEXT col_type_is(      'public', 'asset_report', 'gl_id', 'bigint', 'Column public.asset_report.gl_id should be type bigint');
RETURN NEXT col_is_null(      'public', 'asset_report', 'gl_id', 'Column public.asset_report.gl_id should allow NULL');
RETURN NEXT col_hasnt_default('public', 'asset_report', 'gl_id', 'Column public.asset_report.gl_id should not have a default');

RETURN NEXT has_column(       'public', 'asset_report', 'asset_class', 'Column public.asset_report.asset_class should exist');
RETURN NEXT col_type_is(      'public', 'asset_report', 'asset_class', 'bigint', 'Column public.asset_report.asset_class should be type bigint');
RETURN NEXT col_is_null(      'public', 'asset_report', 'asset_class', 'Column public.asset_report.asset_class should allow NULL');
RETURN NEXT col_hasnt_default('public', 'asset_report', 'asset_class', 'Column public.asset_report.asset_class should not have a default');

RETURN NEXT has_column(       'public', 'asset_report', 'report_class', 'Column public.asset_report.report_class should exist');
RETURN NEXT col_type_is(      'public', 'asset_report', 'report_class', 'integer', 'Column public.asset_report.report_class should be type integer');
RETURN NEXT col_is_null(      'public', 'asset_report', 'report_class', 'Column public.asset_report.report_class should allow NULL');
RETURN NEXT col_hasnt_default('public', 'asset_report', 'report_class', 'Column public.asset_report.report_class should not have a default');

RETURN NEXT has_column(       'public', 'asset_report', 'entered_by', 'Column public.asset_report.entered_by should exist');
RETURN NEXT col_type_is(      'public', 'asset_report', 'entered_by', 'bigint', 'Column public.asset_report.entered_by should be type bigint');
RETURN NEXT col_not_null(     'public', 'asset_report', 'entered_by', 'Column public.asset_report.entered_by should be NOT NULL');
RETURN NEXT col_has_default(  'public', 'asset_report', 'entered_by', 'Column public.asset_report.entered_by shouldhave a default');
RETURN NEXT col_default_is(   'public', 'asset_report', 'entered_by', 'person__get_my_entity_id()', 'Column public.asset_report.entered_by default is');

RETURN NEXT has_column(       'public', 'asset_report', 'approved_by', 'Column public.asset_report.approved_by should exist');
RETURN NEXT col_type_is(      'public', 'asset_report', 'approved_by', 'bigint', 'Column public.asset_report.approved_by should be type bigint');
RETURN NEXT col_is_null(      'public', 'asset_report', 'approved_by', 'Column public.asset_report.approved_by should allow NULL');
RETURN NEXT col_hasnt_default('public', 'asset_report', 'approved_by', 'Column public.asset_report.approved_by should not have a default');

RETURN NEXT has_column(       'public', 'asset_report', 'entered_at', 'Column public.asset_report.entered_at should exist');
RETURN NEXT col_type_is(      'public', 'asset_report', 'entered_at', 'timestamp without time zone', 'Column public.asset_report.entered_at should be type timestamp without time zone');
RETURN NEXT col_is_null(      'public', 'asset_report', 'entered_at', 'Column public.asset_report.entered_at should allow NULL');
RETURN NEXT col_has_default(  'public', 'asset_report', 'entered_at', 'Column public.asset_report.entered_at shouldhave a default');
RETURN NEXT col_default_is(   'public', 'asset_report', 'entered_at', 'now()', 'Column public.asset_report.entered_at default is');

RETURN NEXT has_column(       'public', 'asset_report', 'approved_at', 'Column public.asset_report.approved_at should exist');
RETURN NEXT col_type_is(      'public', 'asset_report', 'approved_at', 'timestamp without time zone', 'Column public.asset_report.approved_at should be type timestamp without time zone');
RETURN NEXT col_is_null(      'public', 'asset_report', 'approved_at', 'Column public.asset_report.approved_at should allow NULL');
RETURN NEXT col_hasnt_default('public', 'asset_report', 'approved_at', 'Column public.asset_report.approved_at should not have a default');

RETURN NEXT has_column(       'public', 'asset_report', 'depreciated_qty', 'Column public.asset_report.depreciated_qty should exist');
RETURN NEXT col_type_is(      'public', 'asset_report', 'depreciated_qty', 'numeric', 'Column public.asset_report.depreciated_qty should be type numeric');
RETURN NEXT col_is_null(      'public', 'asset_report', 'depreciated_qty', 'Column public.asset_report.depreciated_qty should allow NULL');
RETURN NEXT col_hasnt_default('public', 'asset_report', 'depreciated_qty', 'Column public.asset_report.depreciated_qty should not have a default');

RETURN NEXT has_column(       'public', 'asset_report', 'dont_approve', 'Column public.asset_report.dont_approve should exist');
RETURN NEXT col_type_is(      'public', 'asset_report', 'dont_approve', 'boolean', 'Column public.asset_report.dont_approve should be type boolean');
RETURN NEXT col_is_null(      'public', 'asset_report', 'dont_approve', 'Column public.asset_report.dont_approve should allow NULL');
RETURN NEXT col_has_default(  'public', 'asset_report', 'dont_approve', 'Column public.asset_report.dont_approve shouldhave a default');
RETURN NEXT col_default_is(   'public', 'asset_report', 'dont_approve', 'false', 'Column public.asset_report.dont_approve default is');

RETURN NEXT has_column(       'public', 'asset_report', 'submitted', 'Column public.asset_report.submitted should exist');
RETURN NEXT col_type_is(      'public', 'asset_report', 'submitted', 'boolean', 'Column public.asset_report.submitted should be type boolean');
RETURN NEXT col_not_null(     'public', 'asset_report', 'submitted', 'Column public.asset_report.submitted should be NOT NULL');
RETURN NEXT col_has_default(  'public', 'asset_report', 'submitted', 'Column public.asset_report.submitted shouldhave a default');
RETURN NEXT col_default_is(   'public', 'asset_report', 'submitted', 'false', 'Column public.asset_report.submitted default is');

END;
$$ LANGUAGE plpgsql;