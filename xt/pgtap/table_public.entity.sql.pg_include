CREATE OR REPLACE FUNCTION lsmb_pgtap._table_public_entity()
RETURNS SETOF TEXT AS $$
BEGIN


RETURN NEXT has_table(
    'public', 'entity',
    'Should have table public.entity'
);

RETURN NEXT has_pk(
    'public', 'entity',
    'Table public.entity should have a primary key'
);

RETURN NEXT columns_are('public'::name, 'entity'::name, ARRAY[
    'id'::name,
    'name'::name,
    'entity_class'::name,
    'created'::name,
    'control_code'::name,
    'country_id'::name
]);

RETURN NEXT has_column(       'public', 'entity', 'id', 'Column public.entity.id should exist');
RETURN NEXT col_type_is(      'public', 'entity', 'id', 'integer', 'Column public.entity.id should be type integer');
RETURN NEXT col_not_null(     'public', 'entity', 'id', 'Column public.entity.id should be NOT NULL');
RETURN NEXT col_has_default(  'public', 'entity', 'id', 'Column public.entity.id shouldhave a default');
--SELECT col_default_is(   'public', 'entity', 'id', 'nextval(''entity_id_seq''::regclass)', 'Column public.entity.id default is');RETURN NEXT col_default_is(   'public', 'entity', 'id', 'nextval(''entity_id_seq''::regclass)', 'Column public.entity.id default is');

RETURN NEXT has_column(       'public', 'entity', 'name', 'Column public.entity.name should exist');
RETURN NEXT col_type_is(      'public', 'entity', 'name', 'text', 'Column public.entity.name should be type text');
RETURN NEXT col_is_null(      'public', 'entity', 'name', 'Column public.entity.name should allow NULL');
RETURN NEXT col_hasnt_default('public', 'entity', 'name', 'Column public.entity.name should not have a default');

RETURN NEXT has_column(       'public', 'entity', 'entity_class', 'Column public.entity.entity_class should exist');
RETURN NEXT col_type_is(      'public', 'entity', 'entity_class', 'integer', 'Column public.entity.entity_class should be type integer');
RETURN NEXT col_not_null(     'public', 'entity', 'entity_class', 'Column public.entity.entity_class should be NOT NULL');
RETURN NEXT col_hasnt_default('public', 'entity', 'entity_class', 'Column public.entity.entity_class should not have a default');

RETURN NEXT has_column(       'public', 'entity', 'created', 'Column public.entity.created should exist');
RETURN NEXT col_type_is(      'public', 'entity', 'created', 'date', 'Column public.entity.created should be type date');
RETURN NEXT col_not_null(     'public', 'entity', 'created', 'Column public.entity.created should be NOT NULL');
RETURN NEXT col_has_default(  'public', 'entity', 'created', 'Column public.entity.created shouldhave a default');
--SELECT col_default_is(   'public', 'entity', 'created', '(''now''::text)::date', 'Column public.entity.created default is');RETURN NEXT col_default_is(   'public', 'entity', 'created', '(''now''::text)::date', 'Column public.entity.created default is');

RETURN NEXT has_column(       'public', 'entity', 'control_code', 'Column public.entity.control_code should exist');
RETURN NEXT col_type_is(      'public', 'entity', 'control_code', 'text', 'Column public.entity.control_code should be type text');
RETURN NEXT col_not_null(     'public', 'entity', 'control_code', 'Column public.entity.control_code should be NOT NULL');
RETURN NEXT col_has_default(  'public', 'entity', 'control_code', 'Column public.entity.control_code shouldhave a default');
--SELECT col_default_is(   'public', 'entity', 'control_code', 'setting_increment(''entity_control''::character varying)', 'Column public.entity.control_code default is');RETURN NEXT col_default_is(   'public', 'entity', 'control_code', 'setting_increment(''entity_control''::character varying)', 'Column public.entity.control_code default is');

RETURN NEXT has_column(       'public', 'entity', 'country_id', 'Column public.entity.country_id should exist');
RETURN NEXT col_type_is(      'public', 'entity', 'country_id', 'integer', 'Column public.entity.country_id should be type integer');
RETURN NEXT col_not_null(     'public', 'entity', 'country_id', 'Column public.entity.country_id should be NOT NULL');
RETURN NEXT col_hasnt_default('public', 'entity', 'country_id', 'Column public.entity.country_id should not have a default');

END;
$$ LANGUAGE plpgsql;