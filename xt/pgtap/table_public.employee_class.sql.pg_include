CREATE OR REPLACE FUNCTION lsmb_pgtap._table_public_employee_class()
RETURNS SETOF TEXT AS $$
BEGIN


RETURN NEXT has_table(
    'public', 'employee_class',
    'Should have table public.employee_class'
);

RETURN NEXT has_pk(
    'public', 'employee_class',
    'Table public.employee_class should have a primary key'
);

RETURN NEXT columns_are('public'::name, 'employee_class'::name, ARRAY[
    'label'::name,
    'id'::name
]);

RETURN NEXT has_column(       'public', 'employee_class', 'label', 'Column public.employee_class.label should exist');
RETURN NEXT col_type_is(      'public', 'employee_class', 'label', 'text', 'Column public.employee_class.label should be type text');
RETURN NEXT col_not_null(     'public', 'employee_class', 'label', 'Column public.employee_class.label should be NOT NULL');
RETURN NEXT col_hasnt_default('public', 'employee_class', 'label', 'Column public.employee_class.label should not have a default');

RETURN NEXT has_column(       'public', 'employee_class', 'id', 'Column public.employee_class.id should exist');
RETURN NEXT col_type_is(      'public', 'employee_class', 'id', 'integer', 'Column public.employee_class.id should be type integer');
RETURN NEXT col_not_null(     'public', 'employee_class', 'id', 'Column public.employee_class.id should be NOT NULL');
RETURN NEXT col_has_default(  'public', 'employee_class', 'id', 'Column public.employee_class.id shouldhave a default');
--SELECT col_default_is(   'public', 'employee_class', 'id', 'nextval(''employee_class_id_seq''::regclass)', 'Column public.employee_class.id default is');RETURN NEXT col_default_is(   'public', 'employee_class', 'id', 'nextval(''employee_class_id_seq''::regclass)', 'Column public.employee_class.id default is');

END;
$$ LANGUAGE plpgsql;