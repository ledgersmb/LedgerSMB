CREATE OR REPLACE FUNCTION lsmb_pgtap._table_public_lsmb_group_grants()
RETURNS SETOF TEXT AS $$
BEGIN


RETURN NEXT has_table(
    'public', 'lsmb_group_grants',
    'Should have table public.lsmb_group_grants'
);

RETURN NEXT has_pk(
    'public', 'lsmb_group_grants',
    'Table public.lsmb_group_grants should have a primary key'
);

RETURN NEXT columns_are('public'::name, 'lsmb_group_grants'::name, ARRAY[
    'group_name'::name,
    'granted_role'::name
]);

RETURN NEXT has_column(       'public', 'lsmb_group_grants', 'group_name', 'Column public.lsmb_group_grants.group_name should exist');
RETURN NEXT col_type_is(      'public', 'lsmb_group_grants', 'group_name', 'text', 'Column public.lsmb_group_grants.group_name should be type text');
RETURN NEXT col_not_null(     'public', 'lsmb_group_grants', 'group_name', 'Column public.lsmb_group_grants.group_name should be NOT NULL');
RETURN NEXT col_hasnt_default('public', 'lsmb_group_grants', 'group_name', 'Column public.lsmb_group_grants.group_name should not have a default');

RETURN NEXT has_column(       'public', 'lsmb_group_grants', 'granted_role', 'Column public.lsmb_group_grants.granted_role should exist');
RETURN NEXT col_type_is(      'public', 'lsmb_group_grants', 'granted_role', 'text', 'Column public.lsmb_group_grants.granted_role should be type text');
RETURN NEXT col_not_null(     'public', 'lsmb_group_grants', 'granted_role', 'Column public.lsmb_group_grants.granted_role should be NOT NULL');
RETURN NEXT col_hasnt_default('public', 'lsmb_group_grants', 'granted_role', 'Column public.lsmb_group_grants.granted_role should not have a default');

END;
$$ LANGUAGE plpgsql;