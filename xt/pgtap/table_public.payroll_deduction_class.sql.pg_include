CREATE OR REPLACE FUNCTION lsmb_pgtap._table_public_payroll_deduction_class()
RETURNS SETOF TEXT AS $$
BEGIN


RETURN NEXT has_table(
    'public', 'payroll_deduction_class',
    'Should have table public.payroll_deduction_class'
);

RETURN NEXT has_pk(
    'public', 'payroll_deduction_class',
    'Table public.payroll_deduction_class should have a primary key'
);

RETURN NEXT columns_are('public'::name, 'payroll_deduction_class'::name, ARRAY[
    'id'::name,
    'country_id'::name,
    'label'::name,
    'stored_proc_name'::name
]);

RETURN NEXT has_column(       'public', 'payroll_deduction_class', 'id', 'Column public.payroll_deduction_class.id should exist');
RETURN NEXT col_type_is(      'public', 'payroll_deduction_class', 'id', 'integer', 'Column public.payroll_deduction_class.id should be type integer');
RETURN NEXT col_not_null(     'public', 'payroll_deduction_class', 'id', 'Column public.payroll_deduction_class.id should be NOT NULL');
RETURN NEXT col_hasnt_default('public', 'payroll_deduction_class', 'id', 'Column public.payroll_deduction_class.id should not have a default');

RETURN NEXT has_column(       'public', 'payroll_deduction_class', 'country_id', 'Column public.payroll_deduction_class.country_id should exist');
RETURN NEXT col_type_is(      'public', 'payroll_deduction_class', 'country_id', 'integer', 'Column public.payroll_deduction_class.country_id should be type integer');
RETURN NEXT col_not_null(     'public', 'payroll_deduction_class', 'country_id', 'Column public.payroll_deduction_class.country_id should be NOT NULL');
RETURN NEXT col_hasnt_default('public', 'payroll_deduction_class', 'country_id', 'Column public.payroll_deduction_class.country_id should not have a default');

RETURN NEXT has_column(       'public', 'payroll_deduction_class', 'label', 'Column public.payroll_deduction_class.label should exist');
RETURN NEXT col_type_is(      'public', 'payroll_deduction_class', 'label', 'text', 'Column public.payroll_deduction_class.label should be type text');
RETURN NEXT col_not_null(     'public', 'payroll_deduction_class', 'label', 'Column public.payroll_deduction_class.label should be NOT NULL');
RETURN NEXT col_hasnt_default('public', 'payroll_deduction_class', 'label', 'Column public.payroll_deduction_class.label should not have a default');

RETURN NEXT has_column(       'public', 'payroll_deduction_class', 'stored_proc_name', 'Column public.payroll_deduction_class.stored_proc_name should exist');
RETURN NEXT col_type_is(      'public', 'payroll_deduction_class', 'stored_proc_name', 'name', 'Column public.payroll_deduction_class.stored_proc_name should be type name');
RETURN NEXT col_not_null(     'public', 'payroll_deduction_class', 'stored_proc_name', 'Column public.payroll_deduction_class.stored_proc_name should be NOT NULL');
RETURN NEXT col_hasnt_default('public', 'payroll_deduction_class', 'stored_proc_name', 'Column public.payroll_deduction_class.stored_proc_name should not have a default');

END;
$$ LANGUAGE plpgsql;