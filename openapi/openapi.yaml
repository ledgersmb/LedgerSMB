openapi: 3.0.3
info:
  title: LedgerSMB API
  version: 0.0.1
  contact:
    name: LedgerSMB API Support
    url: 'https://github.com/ledgersmb/LedgerSMB/issues'
  description: LedgerSMB API
  license:
    name: GPL-2.0-or-later
    url: 'https://spdx.org/licenses/GPL-2.0-or-later.html'
paths:
  /contacts/sic:
    description: Management of Contacts
    get:
      tags:
        - Contacts
      summary: Get a list of Contacts
      operationId: getContacts
      responses:
        '200':
          description: ...
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SIC'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    post:
      tags:
        - Contacts
      summary: Put a list of Contacts
      operationId: putContacts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SIC'
      responses:
        '201':
          description: ...
          headers:
            ETag:
              $ref: '#/components/headers/ETag'
            Location:
              schema:
                type: string
                format: uri-reference
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/contacts/sic/{id}':
    parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/sic-code'
        style: simple
    get:
      tags:
        - Contacts
      summary: Get a single Contact
      operationId: getContactsById
      responses:
        '200':
          description: ...
          headers:
            ETag:
              $ref: '#/components/headers/ETag'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SIC'
        '304':
          description: ...
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      tags:
        - Contacts
      summary: Put a single Contact
      operationId: putContactsById
      parameters:
        - name: If-Match
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SIC'
      responses:
        '200':
          description: ...
          headers:
            ETag:
              $ref: '#/components/headers/ETag'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SIC'
        '304':
          description: ...
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '412':
          $ref: '#/components/responses/412'
        '413':
          $ref: '#/components/responses/413'
        '428':
          $ref: '#/components/responses/428'
    delete:
      tags:
        - Contacts
      summary: Delete a single Contact
      operationId: deleteContactsById
      parameters:
        - name: If-Match
          in: header
          required: true
          schema:
            type: string
      responses:
        '204':
          description: ...
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    patch:
      tags:
        - Contacts
      summary: Update a single Contact
      operationId: updateContactsById
      parameters:
        - name: If-Match
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ...
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  /contacts/business-types:
    description: Manage business types
    get:
      tags:
        - Business types
      summary: Get business types
      operationId: getBusinessTypes
      responses:
        '200':
          description: ...
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessType'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    post:
      tags:
        - Business types
      summary: Put business types
      operationId: putBusinessTypes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessType'
      responses:
        '201':
          description: ...
          headers:
            ETag:
              $ref: '#/components/headers/ETag'
            Location:
              schema:
                type: string
                format: uri-reference
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/contacts/business-types/{id}':
    description: Manage business type
    parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/business-type-id'
        style: simple
    get:
      tags:
        - Business types
      summary: Get a single business type
      operationId: getBusinessTypesById
      responses:
        '200':
          description: ...
          headers:
            ETag:
              $ref: '#/components/headers/ETag'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessType'
        '304':
          description: ...
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      tags:
        - Business types
      summary: Put a single business type
      operationId: putBusinessTypesById
      parameters:
        - name: If-Match
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessType'
      responses:
        '200':
          description: ...
          headers:
            ETag:
              $ref: '#/components/headers/ETag'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessType'
        '304':
          description: ...
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '412':
          $ref: '#/components/responses/412'
        '413':
          $ref: '#/components/responses/413'
        '428':
          $ref: '#/components/responses/428'
    delete:
      tags:
        - Business types
      summary: Delete a single business type
      operationId: deleteBusinessTypesById
      parameters:
        - name: If-Match
          in: header
          required: true
          schema:
            type: string
      responses:
        '204':
          description: ...
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    patch:
      tags:
        - Business types
      summary: Update a single business type
      operationId: updateBusinessTypesById
      parameters:
        - name: If-Match
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ...
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  /gl/gifi:
    description: A list of GIFI
    get:
      tags:
        - GIFI
      summary: Get a list of GIFI
      operationId: getWIFIs
      responses:
        '200':
          description: ...
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GIFI'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    post:
      tags:
        - GIFI
      summary: Put a list of GIFI
      operationId: putWIFIs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GIFI'
      responses:
        '201':
          description: ...
          headers:
            ETag:
              $ref: '#/components/headers/ETag'
            Location:
              schema:
                type: string
                format: uri-reference
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/gl/gifi/{id}':
    description: A single GIFI
    parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/accno-code'
        style: simple
    get:
      tags:
        - GIFI
      summary: Get a single GIFI
      operationId: getWIFIById
      responses:
        '200':
          description: ...
          headers:
            ETag:
              $ref: '#/components/headers/ETag'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GIFI'
        '304':
          description: ...
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      tags:
        - GIFI
      summary: Put a single GIFI
      operationId: putWIFIById
      parameters:
        - name: If-Match
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GIFI'
      responses:
        '200':
          description: ...
          headers:
            ETag:
              $ref: '#/components/headers/ETag'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GIFI'
        '304':
          description: ...
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '412':
          $ref: '#/components/responses/412'
        '413':
          $ref: '#/components/responses/413'
        '428':
          $ref: '#/components/responses/428'
    delete:
      tags:
        - GIFI
      summary: Delete a single GIFI
      operationId: deleteWIFIById
      parameters:
        - name: If-Match
          in: header
          required: true
          schema:
            type: string
      responses:
        '204':
          description: ...
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    patch:
      tags:
        - GIFI
      summary: Update a single GIFI
      operationId: updateWIFIById
      parameters:
        - name: If-Match
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ...
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  /languages:
    description: Management of language configuration
    get:
      tags:
        - Languages
      summary: Get available languages
      operationId: getLanguages
      responses:
        '200':
          description: ...
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Language'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    post:
      tags:
        - Languages
      summary: Put a list of languages
      operationId: putLanguages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Language'
      responses:
        '201':
          description: ...
          headers:
            ETag:
              $ref: '#/components/headers/ETag'
            Location:
              schema:
                type: string
                format: uri-reference
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/languages/{id}':
    description: Manage a single language
    parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/language-code'
        style: simple
    get:
      tags:
        - Languages
      summary: Get a single language
      operationId: getLanguageById
      responses:
        '200':
          description: ...
          headers:
            ETag:
              $ref: '#/components/headers/ETag'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Language'
        '304':
          description: ...
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      tags:
        - Languages
      summary: Put a single language
      operationId: putLanguageById
      parameters:
        - name: If-Match
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Language'
      responses:
        '200':
          description: ...
          headers:
            ETag:
              $ref: '#/components/headers/ETag'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Language'
        '304':
          description: ...
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '412':
          $ref: '#/components/responses/412'
        '413':
          $ref: '#/components/responses/413'
        '428':
          $ref: '#/components/responses/428'
    delete:
      tags:
        - Languages
      summary: Delete a single language
      operationId: deleteLanguageById
      parameters:
        - name: If-Match
          in: header
          required: true
          schema:
            type: string
      responses:
        '204':
          description: ...
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    patch:
      tags:
        - Languages
      summary: Update a single language
      operationId: updateLanguageById
      parameters:
        - name: If-Match
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ...
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  /products/pricegroups:
    description: Managing products and related configuration
    get:
      tags:
        - Price groups
      summary: Get products price groups
      operationId: getProductsPricegroups
      responses:
        '200':
          description: ...
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pricegroup'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    post:
      tags:
        - Price groups
      summary: Put products price groups
      operationId: putProductsPricegroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPricegroup'
      responses:
        '201':
          description: ...
          headers:
            ETag:
              $ref: '#/components/headers/ETag'
            Location:
              schema:
                type: string
                format: uri-reference
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/products/pricegroups/{id}':
    parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/pricegroup-id'
        style: simple
    get:
      tags:
        - Price groups
      summary: Get a single products price group
      operationId: getProductsPricegroupById
      responses:
        '200':
          description: ...
          headers:
            ETag:
              $ref: '#/components/headers/ETag'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pricegroup'
        '304':
          description: ...
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      tags:
        - Price groups
      summary: Put a single products price group
      operationId: putProductsPricegroupById
      parameters:
        - name: If-Match
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pricegroup'
      responses:
        '200':
          description: ...
          headers:
            ETag:
              $ref: '#/components/headers/ETag'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pricegroup'
        '304':
          description: ...
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '412':
          $ref: '#/components/responses/412'
        '413':
          $ref: '#/components/responses/413'
        '428':
          $ref: '#/components/responses/428'
    delete:
      tags:
        - Price groups
      summary: Delete a single products price group
      operationId: deleteProductsPricegroupById
      parameters:
        - name: If-Match
          in: header
          required: true
          schema:
            type: string
      responses:
        '204':
          description: ...
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    patch:
      tags:
        - Price groups
      summary: Update a single products price group
      operationId: updateProductsPricegroupById
      parameters:
        - name: If-Match
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ...
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  /products/warehouses:
    description: Manage warehouses
    get:
      tags:
        - Warehouses
      summary: Get a list of warehouses
      operationId: getWarehouses
      responses:
        '200':
          description: ...
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Warehouse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    post:
      tags:
        - Warehouses
      summary: Put a list of warehouses
      operationId: putWarehouses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewWarehouse'
      responses:
        '201':
          description: ...
          headers:
            ETag:
              $ref: '#/components/headers/ETag'
            Location:
              schema:
                type: string
                format: uri-reference
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  '/products/warehouses/{id}':
    description: Manage a warehouse
    parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/warehouse-id'
        style: simple
    get:
      tags:
        - Warehouses
      summary: Get a single warehouse
      operationId: getWarehousesById
      responses:
        '200':
          description: ...
          headers:
            ETag:
              $ref: '#/components/headers/ETag'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Warehouse'
        '304':
          description: ...
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      tags:
        - Warehouses
      summary: Put a single warehouse
      operationId: putWarehousesById
      parameters:
        - name: If-Match
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Warehouse'
      responses:
        '200':
          description: ...
          headers:
            ETag:
              $ref: '#/components/headers/ETag'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Warehouse'
        '304':
          description: ...
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '412':
          $ref: '#/components/responses/412'
        '413':
          $ref: '#/components/responses/413'
        '428':
          $ref: '#/components/responses/428'
    delete:
      tags:
        - Warehouses
      summary: Delete a single warehouse
      operationId: deleteWarehousesById
      parameters:
        - name: If-Match
          in: header
          required: true
          schema:
            type: string
      responses:
        '204':
          description: ...
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    patch:
      tags:
        - Warehouses
      summary: Update a single warehouse
      operationId: updateWarehousesById
      parameters:
        - name: If-Match
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ...
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
components:
  schemas:
    sic-code:
      type: string
      minLength: 1
    SIC:
      type: object
      required:
        - code
        - description
      properties:
        code:
          $ref: '#/components/schemas/sic-code'
        description:
          type: string
    business-type-id:
      type: number
      format: int64
    BusinessType:
      type: object
      required:
        - id
        - description
      properties:
        id:
          $ref: '#/components/schemas/business-type-id'
        description:
          type: string
        discount:
          type: number
          format: float
    accno-code:
      type: string
      minLength: 1
    GIFI:
      type: object
      required:
        - accno
        - description
      properties:
        accno:
          $ref: '#/components/schemas/accno-code'
        description:
          type: string
          minLength: 1
    language-code:
      type: string
      pattern: '^[a-z]{2}(_[A-Z]{2})?$'
    Language:
      type: object
      required:
        - code
        - description
      properties:
        code:
          $ref: '#/components/schemas/language-code'
        description:
          type: string
    common-id:
      type: integer
      format: int64
      minimum: 1
    pricegroup-id:
      $ref: '#/components/schemas/common-id'
    Pricegroup:
      allOf:
        - $ref: '#/components/schemas/NewPricegroup'
        - type: object
          required:
            - id
          properties:
            id:
              $ref: '#/components/schemas/pricegroup-id'
    NewPricegroup:
      type: object
      required:
        - description
      properties:
        description:
          type: string
    warehouse-id:
      $ref: '#/components/schemas/common-id'
    Warehouse:
      allOf:
        - $ref: '#/components/schemas/NewWarehouse'
        - type: object
          required:
            - id
          properties:
            id:
              $ref: '#/components/schemas/warehouse-id'
    NewWarehouse:
      type: object
      required:
        - description
      properties:
        description:
          type: string
  responses:
    '400':
      description: Bad request
    '401':
      description: Unauthorized
    '403':
      description: Forbidden
    '404':
      description: Not Found
    '412':
      description: Precondition failed (If-Match header)
    '413':
      description: Payload too large
    '428':
      description: Precondition required
  headers:
    ETag:
      description: ...
      required: true
      schema:
        type: string
    If-Match:
      description: ...
      required: true
      schema:
        type: string
